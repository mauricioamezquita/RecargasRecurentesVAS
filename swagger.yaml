openapi: 3.0.3
info:
  title: FTS API - Recargas Recurrentes & Cliente Frecuente 2025
  version: 1.1.5
  description: |
    Versión final del contrato OpenAPI 3.0 para Tokens, Recargas Recurrentes,
    One‑Touch y Consultas (transacciones, extractos y cliente frecuente) con
    soporte de **tipos de cuenta** (PERSONAL / EMPRESARIAL) según documento de PMV Promociones.
  contact:
    name: Equipo FTS
    email: apis@fts.local
servers:
  - url: https://api.fts.local/api/v1/fts
    description: Producción
  - url: https://staging.api.fts.local/api/v1/fts
    description: Staging

tags:
  - name: Tokens
  - name: Recargas Recurrentes
  - name: Recargas One-Touch
  - name: Consultas
  - name: Cliente Frecuente


security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    IdempotencyKey:
      name: Idempotency-Key
      in: header
      required: true
      description: Clave única por operación para garantizar idempotencia (TTL ~24h).
      schema:
        type: string
  responses:
    UnauthorizedError:
      description: Token inválido o ausente.
    NotFound:
      description: Recurso no encontrado.
    Conflict:
      description: Conflicto (idempotencia o estado).
    ValidationError:
      description: Error de validación.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: VALIDATION_ERROR
        message:
          type: string
          example: Campo amount es requerido
        details:
          type: object
    AccountType:
      type: string
      enum: [PERSONAL, EMPRESARIAL]

    Token:
      type: object
      required: [id, priority, createdAt]
      properties:
        id:
          type: string
          example: tkn_abc123
        description:
          type: string
          nullable: true
          example: Visa ••••1234
          description: 
            Descripción legible del medio de pago tokenizado, utilizada para mostrar al usuario
            información identificativa no sensible (por ejemplo, la franquicia y los últimos
            cuatro dígitos de la tarjeta). No contiene datos confidenciales ni completos del
            instrumento de pago.
        priority:
          type: integer
          minimum: 1
          maximum: 5
          example: 1
          description: Prioridad del token (1 = más alta, 5 = más baja)
        createdAt:
          type: string
          format: date-time
    TokenCreate:
      type: object
      required: [token, priority]
      properties:
        token:
          type: string
          example: tok_xxx_ms
          description: Token proporcionado por el procesador de pagos.
        description:
          type: string
          nullable: true
          example: Visa ••••1234
          description: |
            Descripción legible del medio de pago tokenizado, utilizada para mostrar al usuario
            información identificativa no sensible (por ejemplo, la franquicia y los últimos
            cuatro dígitos de la tarjeta). No contiene datos confidenciales ni completos del
            instrumento de pago.
        priority:
          type: integer
          minimum: 1
          maximum: 5
          example: 1
          description: Prioridad del token (1 = más alta, 5 = más baja)
    TokenUpdatePriority:
      type: object
      required: [priority]
      properties:
        priority:
          type: integer
          minimum: 1
          maximum: 5
          example: 2
          description: Nueva prioridad del token (1 = más alta, 5 = más baja)
    RecargaRuleType:
      type: string
      enum: [FIXED, MIN_BALANCE]
      description: Tipo de regla de recarga recurrente. 'FIXED'= recarga en fecha/hora fija (CRON).  'MIN_BALANCE'= recarga al bajar de un umbral.
    RecargaConfig:
      type: object
      required: [id, accountId, type, amount, currency, status]
      properties:
        id:
          type: string
          example: rcfg_123
        userId:
          type: integer
          example: 123
          description: ID del usuario que aplicará la regla
        accountId:
          type: integer
          example: 456
          description: ID de la cuenta que aplicará la regla
        type:
          $ref: '#/components/schemas/RecargaRuleType'
        amount:
          type: number
          format: double
          example: 100
          description: Monto de la regla
        currency:
          type: string
          example: GTQ
          description: Código ISO 4217
        threshold:
          type: number
          format: double
          nullable: true
          example: 50
          description: Umbral para regla MIN_BALANCE (si aplica) o null para FIJO "FIXED"
        frequency:
          type: string
          nullable: true
          example: 0 8 * * MON
          description: CRON para regla FIJO  "FIXED" (si aplica) o null para MIN_BALANCE 
        status:
          type: string
          enum: [ACTIVO, INACTIVO, ELIMINADO]
          example: ACTIVO
        createdAt:
          type: string
          format: date-time
    RecargaConfigCreateScoped:
      type: object
      required: [type, amount, currency]
      properties:
        type:
          $ref: '#/components/schemas/RecargaRuleType'
        amount:
          type: number
          format: double
          example: 100
          description: Monto de la regla
        currency:
          type: string
          example: GTQ
          description: Código ISO 4217
        threshold:
          type: number
          format: double
          example: null
          nullable: true
          description: Umbral para regla MIN_BALANCE (si aplica)
        frequency:
          type: string
          nullable: true
          example: 0 8 * * MON
          description: |
            Define la **periodicidad de ejecución** de la recarga recurrente.
            
            * **Formato:** Es una **Expresión CRON de 5  campos** (minuto, hora, día del mes, mes, día de la semana).
            * **Uso: Requerido** (y debe ser una cadena CRON válida) si el campo `type` es **FIXED** (recarga programada).
            * **Excepción: Debe ser `null`** si el campo `type` es **MIN_BALANCE** (recarga activada por umbral de saldo). El umbral de disparo de recarga, en este caso, se gestiona por el campo `threshold`.
    RecargaConfigUpdateScoped:
      type: object
      required: [type, amount, currency]
      properties:
        type:
          $ref: '#/components/schemas/RecargaRuleType'
        amount:
          type: number
          format: double
          example: 100
          description: Monto de la regla
        currency:
          type: string
          example: GTQ
          description: Código ISO 4217
        threshold:
          type: number
          format: double
          example: null
          nullable: true
          description: Umbral para regla MIN_BALANCE (si aplica)
        frequency:
          type: string
          nullable: true
          example: 0 8 * * MON
          description: |
            Define la **periodicidad de ejecución** de la recarga recurrente.
            
            * **Formato:** Es una **Expresión CRON de 5  campos** (minuto, hora, día del mes, mes, día de la semana).
            * **Uso: Requerido** (y debe ser una cadena CRON válida) si el campo `type` es **FIXED** (recarga programada).
            * **Excepción: Debe ser `null`** si el campo `type` es **MIN_BALANCE** (recarga activada por umbral de saldo). El umbral de disparo de recarga, en este caso, se gestiona por el campo `threshold`.
        status:
          type: string
          enum: [ACTIVO, INACTIVO]
    RecargaStateUpdate:
      type: object
      required: [status]
      properties:
        status:
          type: string
          enum: [ACTIVO, INACTIVO]
          example: ACTIVO
          description: Nuevo estado de la regla de recarga recurrente
    OneTouchRequestScoped:
      type: object
      required: [accountId, amount, currency]
      properties:
        accountId:
          type: integer
          description: Identificador de la cuenta a recargar
        tokenId:
          type: string
          nullable: true
          description: Si no se envía, se usa el token prioritario del usuario
        amount:
          type: number
          format: double
          example: 100
          description: Monto de la recarga
        currency:
          type: string
          example: GTQ
          description: Código ISO 4217
    Transaction:
      type: object
      required: [id, accountId, type,typeDescription, amount, currency, status, createdAt]
      properties:
        id:
          type: string
          example: tx_001
        accountId:
          type: integer
          example: 456
          description: ID de la cuenta donde se aplicó la transacción
        type:
          type: string
          enum: [CREDITO, DEBITO]
          example: DEBITO
          description: Tipo de transacción (realizada)
        typeDescription:
          type: string
          example: 
          description: |
            Descripción legible del tipo de transacción
            * **RECARGA EFECTIVO**
            * **RECARGA EFECTIVO**
            * **RECARGA CONSIGNACIÓN**
            * **RECARGA BI**
            * **RECARGA POS**
            * **RECARGA APP VAS+**
            * **RECARGA APP BI**
            * **RECARGA GYT**
            * **COBRO TAG**
            * **NOTA CREDITO**
            * **CREDITO CORTESÍA**
            * **CREDITO AJUSTE POR TARIFA**
            * **CREDITO AJUSTE MANUAL**
            * **CREDITO AJUSTE POR REVISIÓN**
            * **NOTA DEBITO**
            * **DEBITO AJUSTE POR REVISIÓN**
            * **DEBITO AJUSTE MANUAL**
        amount:
          type: number
          format: double
          example: 100.0
          description: Monto de la transacción
        currency:
          type: string
          example: GTQ
          description: Código ISO 4217
        status:
          type: string
          enum: [PENDING, SUCCESS, FAILED]
          example: SUCCESS
          description: Estado de la transacción
        createdAt:
          type: string
          format: date-time
    ExtractCreateScoped:
      type: object
      required: [month, delivery]
      properties:
        month:
          type: string
          example: '2025-06'
          description: Mes del extracto en formato YYYY-MM
        delivery:
          type: string
          enum: [EMAIL]
          example: EMAIL
          description: Medio de entrega (Email). El PDF será enviado dentro de 48h.
    ExtractStatus:
      type: object
      required: [id, status]
      properties:
        id:
          type: string
          example: ext_123
        status:
          type: string
          enum: [PENDING, READY, FAILED]
        url:
          type: string
          nullable: true
          description: URL temporal, esta url valida por 7 dias.
        createdAt:
          type: string
          format: date-time
        deliveredAt:
          type: string
          format: date-time
          nullable: true
          description: Fecha de entrega (si aplica)
    ClienteFrecuente:
      type: object
      description: Datos de fidelización del usuario por cuenta. Para EMPRESARIAL aplica descuento por pasos; para PERSONAL se mantienen beneficios actuales.
      required: [userId, accountId, accountType]
      properties:
        userId:
          type: integer
          example: 123
        accountId:
          type: integer
          example: 456
        accountType:
          $ref: '#/components/schemas/AccountType'
        # Campos para cuentas PERSONALES (sin cambios respecto al estado actual)
        currentBenefit:
          type: object
          nullable: true
          description: Beneficio actualmente activo que se está aplicando este mes.
          properties:
            currentMonthlySteps:
              type: integer
              example: 820
              description: Cantidad de pasos (tránsitos) del mes de evaluación.
            appliedRange:
              type: string
              example: '250-1000'
              description: Rango de pasos que califica el beneficio.
            discountPercentage:
              type: string
              example: '10%'
            benefitPeriod:
              type: string
              example: '2025-06'
              description: Periodo donde se aplica el descuento.
            alcance:
              type: string
              example: 'En todos los pasos del mes sobre la tarifa publicada'
              description: Alcance del beneficio actual.
        
        # Progreso hacia el siguiente beneficio
        currentProgress:
          type: object
          nullable: true
          description: Progreso actual hacia el beneficio del próximo mes basado en pasos acumulados.
          properties:
            currentMonthlySteps:
              type: integer
              example: 275
              description: Cantidad de pasos (tránsitos) acumulados en el mes actual.
            projectedRange:
              type: string
              example: '250-1000'
              description: Rango de pasos proyectado para el beneficio del siguiente mes.
            discountPercentage:
              type: string
              example: '10%'
              description: Porcentaje de descuento que se aplicará el próximo mes.
            benefitPeriod:
              type: string
              example: '2025-06'
              description: Periodo donde se aplicará el descuento proyectado.
            alcance:
              type: string
              example: 'En todos los pasos del mes sobre la tarifa publicada'
              description: Alcance del beneficio proyectado para el siguiente mes.
paths:
  # =====================
  #   TOKENS (scoped)
  # =====================
  /users/{userId}/tokens:
    get:
      tags: [Tokens]
      summary: Listar todos los tokens de pago de un usuario
      description: |
        Lista todos los tokens de pago registrados para el usuario VAS+.
      parameters:
        - name: userId
          in: path
          required: true
          description: Identificador único del usuario.
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Lista de tokens del usuario
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Usuario no encontrado o sin tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags: [Tokens]
      summary: Crear un nuevo token de pago para un usuario
      description: |
        Crea un nuevo token de pago asociado al usuario indicado. Requiere `priority`.
      parameters:
        - name: userId
          in: path
          required: true
          description: Identificador único del usuario.
          schema:
            type: integer
            example: 123
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          description: Token creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/Conflict'

  /users/{userId}/tokens/{tokenId}:
    put:
      tags: [Tokens]
      summary: Actualizar prioridad de un token existente
      description: |
        Permite modificar únicamente la prioridad (`priority`) de un token de pago asociado al usuario.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
            example: tkn_abc123
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenUpdatePriority'
      responses:
        '200':
          description: Prioridad actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Token o usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [Tokens]
      summary: Desactivar (lógicamente) un token de pago
      description: |
        Desactiva un token de pago asociado al usuario. No se elimina físicamente, solo se marca como inactivo.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
            example: tkn_abc123
        - $ref: '#/components/parameters/IdempotencyKey'
      responses:
        '204':
          description: Token desactivado correctamente
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Token o usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # =====================================
  #   RECARGAS RECURRENTES (scoped)
  # =====================================
  /users/{userId}/accounts/{accountId}/recurring-topups:
    get:
      tags: [Recargas Recurrentes]
      summary: Listar todas las configuraciones de recarga recurrente del usuario
      description: |
        Devuelve todas las configuraciones de recarga recurrente asociadas a la cuenta indicada del usuario.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
      responses:
        '200':
          description: Lista de configuraciones de recarga recurrente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecargaConfig'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Usuario o cuenta no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags: [Recargas Recurrentes]
      summary: Crear una configuración de recarga recurrente
      description: |
        Crea una nueva configuración asociada a la cuenta del usuario. Soporta `FIXED` o `MIN_BALANCE`.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecargaConfigCreateScoped'
      responses:
        '201':
          description: Configuración creada o actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecargaConfig'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          $ref: '#/components/responses/Conflict'

  /users/{userId}/accounts/{accountId}/recurring-topups/{configId}:
    put:
      tags: [Recargas Recurrentes]
      summary: Actualizar completamente una configuración de recarga recurrente específica
      description: |
        Permite actualizar todos los campos de una configuración de recarga recurrente existente (type, amount, currency, threshold, frequency).
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
        - name: configId
          in: path
          required: true
          schema:
            type: string
            example: rcfg_001
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecargaConfigUpdateScoped'
      responses:
        '200':
          description: Configuración actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecargaConfig'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Configuración no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags: [Recargas Recurrentes]
      summary: Cambiar estado de una configuración de recarga recurrente
      description: |
        Permite activar o desactivar (`status: ACTIVO | INACTIVO`) una configuración de recarga recurrente.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
        - name: configId
          in: path
          required: true
          schema:
            type: string
            example: rcfg_001
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecargaStateUpdate'
      responses:
        '200':
          description: Configuración actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecargaConfig'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Configuración no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [Recargas Recurrentes]
      summary: Eliminar (lógicamente) una configuración de recarga recurrente
      description: |
        Elimina de forma lógica una configuración de recarga recurrente específica del usuario (marca como `ELIMINADO`).
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
        - name: configId
          in: path
          required: true
          schema:
            type: string
            example: rcfg_001
        - $ref: '#/components/parameters/IdempotencyKey'
      responses:
        '204':
          description: Configuración eliminada correctamente
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Configuración no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # =====================================
  #   ONE-TOUCH
  # =====================================
  /users/{userId}/topups/one-touch:
    post:
      tags: [Recargas One-Touch]
      summary: Ejecutar recarga inmediata (One-Touch)
      description: |
        Permite ejecutar una recarga inmediata en una cuenta usando el token prioritario
        o uno específico. Procesa la operación en tiempo real.
      parameters:
        - name: userId
          in: path
          required: true
          description: Identificador único del usuario.
          schema:
            type: integer
            example: 123
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneTouchRequestScoped'
            examples:
              ejemplo:
                value:
                  accountId: 450
                  tokenId: tkn_abc123
                  amount: 100
                  currency: GTQ
      responses:
        '200':
          description: Recarga procesada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '402':
          description: Pago rechazado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          $ref: '#/components/responses/Conflict'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  # =====================================
  #   CONSULTAS (RF-017, RF-018, RF-019)
  # =====================================
  /users/{userId}/accounts/{accountId}/transactions:
    get:
      tags: [Consultas]
      summary: Listar las últimas 10 transacciones de los últimos 7 días, por tipo o genéricas.
      description: |
        Devuelve un historial **limitado** de transacciones del usuario.
        Soporta filtros por tipo y rango de fechas, y opcionalmente por cuenta.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /users/{userId}/accounts/{accountId}/extracts:
    get:
      tags: [Consultas]
      summary: Listar solicitudes de extractos mensuales previos
      description: |
        Devuelve un listado de las solicitudes de extractos mensuales previos del usuario.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtractStatus'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags: [Consultas]
      summary: Solicitar extracto mensual (PDF por correo)
      description: |
        Crea una **solicitud de extracto mensual**. El PDF será enviado al correo del usuario **dentro de 48 horas**.
        La operación es asíncrona y devuelve un `requestId` para consultar el estado.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractCreateScoped'
            examples:
              ejemplo:
                value:
                  month: '2025-06'
                  delivery: EMAIL
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
                    example: ext_123
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /users/{userId}/extracts/{requestId}:
    get:
      tags: [Consultas]
      summary: Consultar estado de extracto mensual solicitado
      description: |
        Permite consultar si el extracto mensual ya fue generado y enviado.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: requestId
          in: path
          required: true
          schema:
            type: string
            example: ext_123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractStatus'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  # =====================================
  #   CLIENTE FRECUENTE (ajustado por tipo de cuenta)
  # =====================================
  /users/{userId}/accounts/{accountId}/frequent-customer:
    get:
      tags: [Cliente Frecuente]
      summary: Consultar fidelización por cuenta (PERSONAL/EMPRESARIAL)
      description: |
        Ajustado a lineamientos de promociones:
        - **EMPRESARIAL**: si la cuenta cumple con los rangos de **Cantidad de pasos** del mes en curso, obtiene un **descuento porcentual** sobre la **tarifa publicada** para **todos sus tránsitos del mes siguiente**.
     
        - **PERSONAL**: mantiene la lógica actual de nivel, beneficios y progreso.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            example: 123
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            example: 456
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                empresarial:
                  value:
                    userId: 123
                    accountId: 456
                    accountType: EMPRESARIAL
                    currentBenefit:
                      currentMonthlySteps: 820
                      appliedRange: '250-1000'
                      discountPercentage: '10%'
                      benefitPeriod: '2025-09'
                      alcance: 'En todos los pasos del mes sobre la tarifa publicada'
                    currentProgress:
                      currentMonthlySteps: 820
                      projectedRange: '250-1000'
                      discountPercentage: '10%'
                      benefitPeriod: '2025-10'
                      alcance: 'En todos los pasos del mes sobre la tarifa publicada'
                personal:
                  value:
                    userId: 123
                    accountId: 456
                    accountType: PERSONAL
                    currentBenefit:
                      currentMonthlySteps: 820
                      appliedRange: '250-1000'
                      discountPercentage: '10%'
                      benefitPeriod: '2025-09'
                      alcance: 'En todos los pasos del mes sobre la tarifa publicada'
                    currentProgress:
                      currentMonthlySteps: 820
                      projectedRange: '250-1000'
                      discountPercentage: '10%'
                      benefitPeriod: '2025-10'
                      alcance: 'En todos los pasos del mes sobre la tarifa publicada'
              schema:
                $ref: '#/components/schemas/ClienteFrecuente'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'

